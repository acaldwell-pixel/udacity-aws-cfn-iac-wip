pipeline {
    agent any
    stages {
        stage('AWS Credentials') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'jenkins-admin', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                    sh '''
                        mkdir -p ~/.aws
                        echo ["default]" >~/.aws/credentials
                        echo "[default]" >~/.boto
                        echo "aws_access_key_id = ${AWS_ACCESS_KEY_ID}" >>~/.boto
                        echo "aws_secret_acess_key = ${AWS_SECRET_ACCESS_KEY}" >>~/.boto
                        echo "aws_access_key_id = ${AWS_ACCESS_KEY_ID}" >>~/.aws/credentials
                        echo "aws_access_key_id = ${AWS_ACCESS_KEY_ID}" >>~/.aws/credentials
                        '''
                }
            }
        }
        stage('Create EC2 Instance') {
            steps {
                ansiblePlaybook playbook: 'main.yml', inventory: 'inventory'
            }
        }
        stage('Create Kubernetes cluster') {
            steps {
                withAWS(region:'us-east-2', credentials:'jenkins-admin') {
                    sh '''
                        eksctl create cluster \
                        --name finalCluster \
                        --version 1.15 \
                        --nodegroup-name standard-workers \
                        --node-type t2.small \
                        --nodes 2 \
                        --nodes-min 1 \
                        --nodes-max 3 \
                        --node-ami auto \
                        --region us-east-2 \
                        --zones us-east-2a \
                        --zones us-east-2b \
                        --zones us-east-2c \
                        '''
                }
            }
        }
        stage('Create conf file cluster') {
            steps {
                withAWS(region:'us-east-2', credentials:'jenkins-admin') {
                    sh '''
                        aws eks --region us-east-2 update-kubeconfig --name finalCluster
                        '''
                }
            }
        }
    }
}